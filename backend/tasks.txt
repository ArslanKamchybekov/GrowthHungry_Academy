1. Update roles
@Put('/update-role/:id')
    async updateRole(@Param ('id')id: string, @Body ()user: IUser) { 
        try {
            const updatedUser = await this.userService.updateRole(id, user.role);
            return updatedUser;
        } catch (error) {
            return { error: error.message };
        }
    }

async updateRole(id: string, role: string) {
        try {
            return UserModel.findByIdAndUpdate(id, { role }, { new: true }).exec();
        } catch (error) {
            console.log(error)
        }
    }    

2. Enroll 

@Post('enroll/:id')
    async enrollUser(@Param ('id')id: string, @Body() _id: string) { 
        try {
            const enrolledUser = await this.userService.enroll(id, _id);
            return enrolledUser;
        } catch (error) {
            return { error: error.message };
        }
    }

async enroll(id: string, courseId: string) {
        try {
            return UserModel.findByIdAndUpdate(id, { $push: { courses: courseId } }, { new: true }).exec();
        } catch (error) {
            console.log(error)
        }
    }